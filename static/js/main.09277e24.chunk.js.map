{"version":3,"sources":["fbase.tsx","component/Nweet.tsx","routes/Home.tsx","routes/Auth.tsx","component/Navigation.tsx","routes/Profile.tsx","component/Router.tsx","component/App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNweet","onDeleteCLick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","console","log","update","onChange","value","target","required","type","onClick","src","width","height","Home","userObj","nweet","nweets","setNweets","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","creatorId","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","placeholder","maxLength","accept","files","theFile","reader","FileReader","onloadend","finishedEvent","result","Boolean","readAsDataURL","filter","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onAuthStateChanged","user","onSocialClick","name","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","Navigation","to","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09277e24.chunk.js","sourcesContent":["import \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import {dbService, storageService} from \"../fbase\";\r\nimport React, {useState} from \"react\";\r\nimport {storage} from \"firebase\";\r\n\r\ntype INweet = {\r\n    nweetObj: any;\r\n    isOwner: boolean;\r\n}\r\n\r\nconst Nweet: React.FC<INweet> = ({ nweetObj, isOwner }) => {\r\n\r\n    const [editing, setEditing] = useState<boolean>(false);\r\n    const [newNweet, setNweet] = useState<string>(nweetObj.text);\r\n\r\n    const onDeleteCLick = async() => {\r\n        const ok = window.confirm(\"삭제하시겠습니다?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n\r\n    const onChange = (event: any) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj.id, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit}>\r\n                            <input onChange={onChange} value={newNweet} required />\r\n                            <input type=\"submit\" value=\"Update Nweet\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing}>Cancel</button>\r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            <h4>{nweetObj.text}</h4>\r\n                            {\r\n                                nweetObj.attachmentUrl && (\r\n                                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                                )\r\n                            }\r\n                            {\r\n                                isOwner && (\r\n                                    <>\r\n                                        <button onClick={onDeleteCLick}>Delete Nweet</button>\r\n                                        <button onClick={toggleEditing}>Edit Nweet</button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </>\r\n                )}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import React, {useEffect, useState} from \"react\";\r\nimport {dbService, storageService} from \"../fbase\";\r\nimport Nweet from \"../component/Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\ntype IHome = {\r\n    userObj: any;\r\n}\r\n\r\n\r\nconst Home:React.FC<IHome> = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState<any>(\"\");\r\n    const [nweets, setNweets] = useState<Array<any>>([]);\r\n    const [attachment, setAttachment] = useState<any>(\"\");\r\n\r\n    const onSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n      let attachmentUrl: string = \"\";\r\n      if(attachmentUrl !== \"\")\r\n      {\r\n          const attachmentRef = storageService\r\n              .ref()\r\n              .child(`${userObj.uid}/${uuidv4()}`);\r\n          const response = await attachmentRef.putString(attachment, \"data_url\", );\r\n          attachmentUrl = await response.ref.getDownloadURL();\r\n\r\n      }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {\r\n            target: { files }\r\n        } = event;\r\n        const theFile: any = files?.[0];\r\n        const reader: FileReader | null = new FileReader();\r\n        reader.onloadend = (finishedEvent: ProgressEvent<FileReader>) => {\r\n            const result = finishedEvent.target?.result;\r\n            setAttachment(result);\r\n        };\r\n        if(Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    useEffect(()=> {\r\n        dbService.collection(\"nweets\")\r\n            .orderBy(\"createAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\"/>\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>clear</button>\r\n                </div>\r\n            )}\r\n            <div>\r\n                {nweets.filter(\r\n                    nweet =>\r\n                        nweet.text != \"\"\r\n                ).map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useEffect} from \"react\";\r\nimport {useState} from \"react\";\r\nimport {authService, firebaseInstance} from \"../fbase\";\r\n\r\nconst Auth: React.FC = () => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [newAccount, setNewAccount] = useState<boolean>(true);\r\n    const [error, setError] = useState<any>(\"\");\r\n\r\n    useEffect(()=> {\r\n        authService.onAuthStateChanged(\r\n        (user) =>\r\n            console.log(user))\r\n        }, []);\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    const onSocialClick = async (event : any) => {\r\n      const {\r\n          target: {name},\r\n      } = event;\r\n      let provider: any;\r\n      if( name == \"google\") {\r\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      } else if (name == \"github\") {\r\n          provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n      const data = await authService.signInWithPopup(provider);\r\n      console.log(data);\r\n    };\r\n\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if(name == \"email\") {\r\n            setEmail(value)\r\n        } else if (name == \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n    <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input name=\"email\"\r\n                   type=\"email\"\r\n                   placeholder=\"Email\"\r\n                   value={email}\r\n                   onChange={onChange}\r\n                   required\r\n            />\r\n            <input name=\"password\"\r\n                   type=\"password\"\r\n                   placeholder=\"Password\"\r\n                   value={password}\r\n                   onChange={onChange}\r\n                   required />\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n            <button onClick={onSocialClick} name=\"google\">Continue with Github</button>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default Auth;\r\n","import {Link} from \"react-router-dom\";\r\nimport {InvalidEvent} from \"react\";\r\n\r\ntype INavigation = {\r\n    userObj: any;\r\n};\r\n\r\nconst Navigation: React.FC<INavigation> = ({ userObj }) => {\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{ userObj.displayName }</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default  Navigation;","import { authService, dbService } from \"../fbase\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport Nweet from \"../component/Nweet\";\r\n\r\ntype IProfile = {\r\n    userObj: any;\r\n    refreshUser: Function;\r\n}\r\nconst Profile:React.FC<IProfile> = ({ userObj, refreshUser }) => {\r\n    const [nweets, setNweets] = useState<Array<any>>([]);\r\n    const [newDisplayName, setNewDisplayName] = useState<string | any>(userObj.displayName);\r\n    const history = useHistory();\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createAt\", \"asc\")\r\n            .get();\r\n        setNweets(nweets.docs.map((doc) => doc.data()));\r\n    }\r\n\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        console.log(userObj.displayName);\r\n        console.log(newDisplayName);\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display Name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n            {nweets.filter(\r\n                nweet =>\r\n                    nweet.text != \"\"\r\n            ).map((nweet) => (\r\n                <Nweet\r\n                    key={nweet.id}\r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"../routes/Profile\";\r\n\r\ntype IRoute = {\r\n    isLoggedIn: boolean;\r\n    userObj: Object;\r\n    refreshUser: Function;\r\n}\r\n\r\n\r\nconst AppRouter:React.FC<IRoute> = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <BrowserRouter>\r\n            {isLoggedIn && <Navigation\r\n                userObj={userObj}\r\n            />}\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ? (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj}/>\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                            </Route>\r\n                            </>\r\n                    ) : (\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    )\r\n                }\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\r\nimport AppRouter from \"component/Router\";\r\nimport { authService } from \"../fbase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst App:React.FC = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState<any>(null);\r\n\r\n    const refreshUser = () => {\r\n        const user: firebase.User | null = authService.currentUser;\r\n        if(user){\r\n            setUserObj({\r\n                uid: user.uid,\r\n                displayName: user.displayName,\r\n                updateProfile: (args: any) => user.updateProfile(args),\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        authService.onAuthStateChanged((user) => {\r\n            if(user){\r\n                setUserObj({\r\n                    uid: user.uid,\r\n                    displayName: user.displayName,\r\n                    updateProfile: (args: any) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setUserObj(false);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"initializing...\"}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}